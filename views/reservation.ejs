<!DOCTYPE html>
<html>
<head>
  <title>Workout Reservation Form</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .container {
      background-color: #ffffff;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      padding: 30px;
      width: 400px;
      text-align: center;
    }
    h2 {
      font-size: 24px;
      margin-bottom: 20px;
    }
    label {
      display: block;
      text-align: left;
      margin-bottom: 5px;
      font-weight: bold;
    }
    input[type="date"],
    input[type="time"],
    select,
    textarea {
      width: 100%;
      padding: 10px;
      margin-bottom: 15px;
      border: 1px solid #ccc;
      border-radius: 3px;
      box-sizing: border-box;
      font-family: Arial, sans-serif;
      font-size: 14px;
    }
    button,
    .button-like-link {
      display: inline-block;
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: #ffffff;
      border: none;
      border-radius: 3px;
      cursor: pointer;
      text-decoration: none;
      font-family: Arial, sans-serif;
      font-size: 16px;
      margin-top: 10px;
    }
    button:hover,
    .button-like-link:hover {
      background-color: #45a049;
    }
    img {
      max-width: 100%;
      height: auto;
      margin-bottom: 15px;
    }
    p {
      margin: 5px 0;
      font-size: 14px;
    }
    .radio-group {
      text-align: left;
      margin-bottom: 10px;
    }
    .radio-group label {
      display: inline-block;
      margin-right: 10px;
    }
    .note {
      font-size: 12px;
      color: #888;
      margin-top: 5px;
      text-align: left;
    }

    /* Style for the "Today" button */
    .fc-today-button {
      background-color: #4CAF50 !important;
      color: #ffffff !important;
      border: none !important;
      border-radius: 3px !important;
      padding: 6px 12px !important;
      font-size: 14px !important;
      cursor: pointer !important;
    }

    .fc-today-button:hover {
      background-color: #45a049 !important;
    }

    /* Style for the previous and next month buttons */
    .fc-prev-button,
    .fc-next-button {
      background-color: #4CAF50 !important;
      color: #ffffff !important;
      border: none !important;
      border-radius: 3px !important;
      padding: 6px 12px !important;
      font-size: 14px !important;
      cursor: pointer !important;
    }

    .fc-prev-button:hover,
    .fc-next-button:hover {
      background-color: #45a049 !important;
    }

    /* Positioning for the buttons */
    .fc-toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .fc-left,
    .fc-center,
    .fc-right {
      display: flex;
      align-items: center;
    }

    .fc-left > *,
    .fc-center > *,
    .fc-right > * {
      margin: 0 5px;
    }

    a.button-like-link {
      display: inline-block;
      width: 150px; /* Adjust this value to your desired width */
      padding: 8px 16px; /* Adjust padding as needed */
      background-color: #4CAF50;
      color: #ffffff;
      border: none;
      border-radius: 3px;
      cursor: pointer;
      text-decoration: none;
      font-family: Arial, sans-serif;
      font-size: 14px; /* Adjust font size if needed */
      margin-top: 10px;
      text-align: center;
    }
    a.button-like-link:hover {
      background-color: #45a049;
    }
    .spin-wheel-button {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1000;
    }
  </style>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.7.0/main.min.css">
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.7.0/main.min.js"></script>
</head>
<body>
  <a href="https://wheelycoolspin.netlify.app" target="_blank" class="button-like-link spin-wheel-button">Dynamic Spin Wheel</a>
  <div class="container">
    <h2>Workout Reservation Form</h2>
    <form action="/reserve" method="POST">
      <img src="https://encoura.org/wp-content/uploads/2021/02/cbu.png" alt=" ">
      <div>
        <label for="date">Date of the Event:</label>
        <input type="date" id="date" name="date" required>
      </div>
      <div>
        <label for="time">Preferred Time of Appointment:</label>
        <input type="time" id="time" name="time" required>
      </div>
      <div>
        <label for="goals">What are your goals?</label>
        <select id="goals" name="goals" required>
          <option value="">Select your goal</option>
          <option value="Strength">Strength</option>
          <option value="Weight Loss">Weight Loss</option>
          <option value="Other">Other</option>
        </select>
      </div>
      <div>
        <label for="timeslot">Time Slots:</label>
        <select id="timeslot" name="timeslot" required>
          <option value="">Select a time slot</option>
          <option value="8am - 10am">8am - 10am</option>
          <option value="10am - 12pm">10am - 12pm</option>
          <option value="1pm - 3pm">1pm - 3pm</option>
          <option value="3pm - 5pm">3pm - 5pm</option>
        </select>
      </div>
      <div>
        <label>Do you want a follow-up email with a trainer?</label>
        <div class="radio-group">
          <input type="radio" id="followUpYes" name="followUp" value="yes" required>
          <label for="followUpYes">Yes, email me!</label>
        </div>
        <div class="radio-group">
          <input type="radio" id="followUpNo" name="followUp" value="no" required>
          <label for="followUpNo">No, do not email me.</label>
        </div>
      </div>
      <div>
        <label>Have you trained with Cyber Viking before?</label>
        <div class="radio-group">
          <input type="radio" id="trainedYes" name="trainedBefore" value="yes" required>
          <label for="trainedYes">Yes</label>
          <input type="radio" id="trainedNo" name="trainedBefore" value="no" required>
          <label for="trainedNo">No</label>
        </div>
        <div id="trainedDescription" style="display:none;">
          <label for="trainedDesc">Please provide details:</label>
          <textarea id="trainedDesc" name="trainedDesc"></textarea>
        </div>
      </div>
      <div>
        <label for="weightChange">How much weight would you like to gain or lose?</label>
        <select id="weightChange" name="weightChange" required>
          <option value="">Select an option</option>
          <option value="-40+">-40+</option>
          <option value="-20+">-20+</option>
          <option value="-10+">-10+</option>
          <option value="Maintain">Maintain</option>
          <option value="+10">+10</option>
          <option value="+20">+20</option>
          <option value="+40">+40</option>
        </select>
      </div>
      <div>
        <label for="preConditions">Do you want the trainer to know any pre-existing conditions?</label>
        <textarea id="preConditions" name="preConditions"></textarea>
      </div>
      <button type="submit">Reserve</button>
    </form>
    <% if (isAdmin) { %>
      <a href="/reservations" class="button-like-link">View All Reservations</a>
    <% } %>
  </div>

  <div id="calendar"></div>

  <h3>Reserved Dates:</h3>
  <ul id="reservedDatesList"></ul>


<script>


document.addEventListener('DOMContentLoaded', function() {
  const calendarEl = document.getElementById('calendar');
  const calendar = new FullCalendar.Calendar(calendarEl, {
    initialView: 'dayGridMonth',
    events: function(info, successCallback, failureCallback) {
      fetch('/reservations/calendar')
        .then(response => response.json())
        .then(data => {
          const events = data.map(event => ({
            start: `${event.start}T${event.time}`,
            title: event.title
          }));
          successCallback(events);
          displayReservedDates(data);
        })
        .catch(error => {
          failureCallback(error);
        });
    },
    dayCellContent: function(dayCell) {
      const date = dayCell.date;
      const reservedDates = calendar.getEvents().map(event => formatDate(event.start));
      if (reservedDates.includes(formatDate(date))) {
        dayCell.el.style.backgroundColor = '#ff0000';
      }
    }
  });
  calendar.render();
});

function formatDate(date) {
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  return `${year}-${month}-${day}`;
}



function displayReservedDates(reservations) {
  const reservedDatesList = document.getElementById('reservedDatesList');
  reservedDatesList.innerHTML = '';

  if (reservations && reservations.length > 0) {
    reservations.forEach(reservation => {
      if (reservation.start && reservation.time && reservation.title) {
        const listItem = document.createElement('li');
        const reservationDate = new Date(reservation.start);
        const formattedDate = formatDate(reservationDate);
        const formattedTime = formatTime(reservation.time);
        listItem.textContent = `${formattedDate} ${formattedTime} - ${reservation.title}`;
        reservedDatesList.appendChild(listItem);
      }
    });
  } else {
    const listItem = document.createElement('li');
    listItem.textContent = 'No reservations found.';
    reservedDatesList.appendChild(listItem);
  }
}


function formatTime(timeString) {
  const [hours, minutes] = timeString.split(':');
  const hour12 = hours % 12 || 12;
  const ampm = hours < 12 ? 'AM' : 'PM';
  return `${hour12}:${minutes} ${ampm}`;
}

</script>

  <script>
    // Script to toggle the display of the trained before description field
    document.getElementById('trainedYes').addEventListener('change', function() {
      document.getElementById('trainedDescription').style.display = 'block';
    });
    document.getElementById('trainedNo').addEventListener('change', function() {
      document.getElementById('trainedDescription').style.display = 'none';
    });
  </script>
</body>
</html>
